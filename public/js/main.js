var app=angular.module("MeetUpApp",["ngMaterial"]);app.config(function($mdThemingProvider){$mdThemingProvider.theme("default").primaryPalette("teal").accentPalette("light-green").backgroundPalette("grey")}),function(app){var injectParams=["$scope","$mdDialog","currentEvent"],EventFormController=function($scope,$mdDialog,currentEvent){$scope.currentEvent=currentEvent;var autocomplete;$scope.currentEvent.guestList&&$scope.currentEvent.guestList.length||($scope.currentEvent.guestList=[]),$scope.geolocate=function(){autocomplete=new google.maps.places.Autocomplete(document.getElementById("location"),{types:["geocode"]}),navigator.geolocation&&navigator.geolocation.getCurrentPosition(function(position){var geolocation={lat:position.coords.latitude,lng:position.coords.longitude},circle=new google.maps.Circle({center:geolocation,radius:position.coords.accuracy});autocomplete.setBounds(circle.getBounds())})}};EventFormController.$inject=injectParams,app.controller("EventFormController",EventFormController)}(app),function(app){app.models=app.models||{};var Event={STATE_DRAFT:1,STATE_PUBLISHED:2,fields:["id","title","location","startDate","startTime","endDate","endTime","invited","type","host","description","savedState"],storageName:"events",init:function(){this.listEventsFromStorage()},create:function(event){var tempEvent={};return event?event&&(this.fields.forEach(function(field){event[field]&&(tempEvent[field]=event[field])}),tempEvent.savedState=event.savedState||Event.STATE_DRAFT):tempEvent.id=(new Date).getTime(),Object.keys(tempEvent).length>1&&(this.events.push(tempEvent),this.updateStorage()),tempEvent},events:[],get:function(index){return this.events[index]},listEventsFromStorage:function(){var self=this,tempEvents=localStorage.getItem(self.storageName);return tempEvents?(tempEvents=JSON.parse(tempEvents).map(function(event){return self.create(event)}),self.events=tempEvents):self.events=[]},updateStorage:function(){localStorage.setItem(this.storageName,this.stringify())},saveEvent:function(event){var tempEvent;this.events.forEach(function(oldEvent,index){event.id==oldEvent.id&&(this.events[index]=tempEvent=event)}),tempEvent||this.events.push(event),this.updateStorage()},stringify:function(){var tempEvents=[];return this.events.forEach(function(event){tempEvents.push({id:event.id,title:event.title,location:event.location,startDate:event.startDate,startTime:event.startTime,endDate:event.endDate,endTime:event.endTime,invited:event.invited,type:event.type,host:event.host,description:event.description,savedState:event.savedState})}),JSON.stringify(tempEvents)}};app.models.Event=Event}(app),function(app){var injectParams=["$scope","$filter","$mdDialog","$mdMedia"],EventsController=function($scope,$filter,$mdDialog,$mdMedia){function saveEvent(event,savedState){event&&(savedState&&(event.savedState=savedState),app.models.Event.saveEvent(event))}app.models.Event.init(),$scope.EventModel=app.models.Event,$scope.events=app.models.Event.events,$scope.currentEvent=null,$scope.createEvent=function(){$scope.currentEvent=app.models.Event.create()},$scope.getEvent=function(index){return $scope.events.length?app.models.Event.get(index):null},$scope.saveEventAsDraft=function(event){saveEvent(event,app.models.Event.STATE_DRAFT)},$scope.saveEventAsPublished=function(event){saveEvent(event,app.models.Event.STATE_PUBLISHED)},$scope.publishEvent=$scope.saveEventAsPublished,$scope.openForm=function($event,eventObject){$scope.currentEvent=eventObject,$mdDialog.show({controller:"EventFormController",templateUrl:"public/template/events/event-form.template.html",parent:angular.element(document.body),targetEvent:$event,clickOutsideToClose:!0,fullscreen:$mdMedia("sm")||$mdMedia("xs"),locals:{currentEvent:eventObject}})}};EventsController.$inject=injectParams,app.controller("EventsController",EventsController)}(app);